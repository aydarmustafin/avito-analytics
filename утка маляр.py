#!/usr/bin/env python
# coding: utf-8

# In[35]:


from IPython.display import Image


def step2_no_umbrella():
    print(
        '\n–ê –Ω–∞ —É–ª–∏—Ü–µ üåÉ –µ—Å—Ç—å –¥–æ–∂–¥–∏–∫? üí¶'
    )
    option = ''
    options = {'–¥–∞': True, '–Ω–µ—Ç': False}
    while option not in options:
        print('–í—ã–±–µ—Ä–∏—Ç–µ: {}/{}'.format(*options))
        option = input()
    if options[option]:
        print('\n\n—è –∂–µ –∑–∞–±–æ–ª–µ—é —Ç—ã —á–µ')
        display(Image(
            url='https://bit.ly/3lkXUKD',
            width=400))
    else:
        print('\n\n–æ–æ–æ —Ç–æ–≥–¥–∞ –ø–æ–π–¥—É –Ω–∞–∂—Ä—É—Å—è')
        display(Image(
            url='https://bit.ly/3nsEC90',
            width=400))


def step2_umbrella():
    print(
        '\n–ê –Ω–∞ —É–ª–∏—Ü–µ üåÉ –µ—Å—Ç—å –¥–æ–∂–¥–∏–∫? üí¶'
    )
    option = ''
    options = {'–¥–∞': True, '–Ω–µ—Ç': False}
    while option not in options:
        print('–í—ã–±–µ—Ä–∏—Ç–µ: {}/{}'.format(*options))
        option = input()
    if options[option]:
        print('\n\n–æ–∫ –ø–æ–π–¥—É –Ω–∞–∂—Ä—É—Å—è')
        display(Image(
            url='https://bit.ly/3tBSvTj',
            width=400))
    else:
        print('\n\n—Ç–æ–≥–¥–∞ –∑–∞—á–µ–º –º–Ω–µ –∑–æ–Ω—Ç–∏–∫ –ª–µ–µ —Ç—ã —á–µ–µ —ç—ç')
        display(Image(
            url='https://bit.ly/2YRu60Q',
            width=400))


def step1():
    print(
        '–£—Ç–∫–∞-–º–∞–ª—è—Ä ü¶Ü —Ä–µ—à–∏–ª–∞ –≤—ã–ø–∏—Ç—å –∑–∞–π—Ç–∏ –≤ –±–∞—Ä. '
        '–í–∑—è—Ç—å –µ–π –∑–æ–Ω—Ç–∏–∫? ‚òÇÔ∏è'
    )
    option = ''
    options = {'–¥–∞': True, '–Ω–µ—Ç': False}
    while option not in options:
        print('–í—ã–±–µ—Ä–∏—Ç–µ: {}/{}'.format(*options))
        option = input()
    if options[option]:
        return step2_umbrella()
    return step2_no_umbrella()


if __name__ == '__main__':
    step1()


# In[ ]:





# In[ ]:




